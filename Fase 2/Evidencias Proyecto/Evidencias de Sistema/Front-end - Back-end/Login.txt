import { StyleSheet, Text, View, ImageBackground, Pressable, Alert, BackHandler } from 'react-native';
import React, { useRef, useState, useEffect } from 'react';
import ScreenWrapper from '../components/ScreenWrapper';
import { theme } from '../constants/theme';
import Icon from '../assets/icons';
import { StatusBar } from 'expo-status-bar';
import BackButton from '../components/BackButton';
import { useRouter } from 'expo-router';
import { hp, wp } from '../helpers/common';
import Input from '../components/Input';
import Button from '../components/Button';
import { supabase } from '../lib/supabase';

const Login = () => {
  const router = useRouter();
  const emailRef = useRef("");
  const passwordRef = useRef("");
  const [loading, setLoading] = useState(false);
  
  // Función que maneja el evento del botón de retroceso
  const handleBackPress = () => {
    Alert.alert(
      'Salir de la aplicación',
      '¿Estás seguro de que deseas salir?',
      [
        { text: 'Cancelar', style: 'cancel' },
        { text: 'Salir', onPress: () => BackHandler.exitApp() }
      ],
      { cancelable: true }
    );
    return true; // Indica que hemos manejado el evento
  };

  // Hook que escucha el botón de retroceso
  useEffect(() => {
    BackHandler.addEventListener('hardwareBackPress', handleBackPress);

    // Cleanup para quitar el listener cuando el componente se desmonta
    return () => BackHandler.removeEventListener('hardwareBackPress', handleBackPress);
  }, []);

  const onSubmit = async () => {
    if (!emailRef.current || !passwordRef.current) {
      Alert.alert('Iniciar Sesión', "Las credenciales no son correctas");
      return;
    }

    let email = emailRef.current.trim();
    let password = passwordRef.current.trim();
    setLoading(true);
    const { error } = await supabase.auth.signInWithPassword({
      email,
      password,
    });

    setLoading(false);

    console.log('error', error);
    if (error) {
      Alert.alert('Login', error.message);
    }
  };

  return (
    <ScreenWrapper bg="white">
      <StatusBar style="dark" />

      <ImageBackground
        source={require('../assets/images/Majula.jpg')}
        style={{ flex: 1 }}
        resizeMode="cover"
      >
        <View style={styles.overlay} />
        <View style={styles.backButtonContainer}>
  <BackButton router={router} />
</View>

        {/* Contenido principal */}
        <View style={styles.container}>
          

          {/* Texto de bienvenida */}
          <View style={styles.welcomeContainer}>
            <Text style={styles.welcomeText}>Bienvenido de vuelta,</Text>
            <Text style={styles.welcomeText}>Ser de la ceniza...</Text>
          </View>

          {/* Formulario de inicio de sesión */}
          <View style={styles.form}>
            <Text style={{ fontSize: hp(1.6), color: '#FFFFFF' }}>
              Inicia sesión para continuar
            </Text>
            <Input
              icon={<Icon name="mail" size={26} strokeWidth={1.6} />}
              placeholder='Correo Electrónico'
              onChangeText={(value) => (emailRef.current = value)}
              containerStyle={{ backgroundColor: '#FFFFFF', borderColor: '#FF4500' }} // Cambia el color de fondo y el borde
              inputStyle={{ color: '#000000' }}
            />
            <Input
              icon={<Icon name="lock" size={26} strokeWidth={1.6} />}
              placeholder='Contraseña'
              secureTextEntry
              onChangeText={(value) => (passwordRef.current = value)}
              containerStyle={{ backgroundColor: '#FFFFFF', borderColor: '#FF4500' }} // Cambia el color de fondo y el borde
              inputStyle={{ color: '#000000' }}
            />
            <Text style={styles.forgotPassword}>
              ¿Olvidaste tu contraseña?
            </Text>
            {/* Botón de inicio de sesión */}
            <Button title={'Iniciar Sesión'} loading={loading} onPress={onSubmit} buttonStyle={{ backgroundColor: '#FF4500' }} />
          </View>

          {/* Pie de página */}
          <View style={styles.footer}>
            <Text style={styles.footerText}>¿No tienes una cuenta?</Text>
            <Pressable onPress={() => router.push('signUp')}>
              <Text style={[styles.footerText, { color: '#FF4500', fontWeight: theme.fonts.semibold }]}>Registrarse</Text>
            </Pressable>
          </View>
        </View>
      </ImageBackground>
    </ScreenWrapper>
  );
};

export default Login;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    paddingHorizontal: wp(5),
  },
  overlay: {
    ...StyleSheet.absoluteFillObject,
    backgroundColor: 'rgba(0, 0, 0, 0.5)', 
  },
  welcomeContainer: {
    marginBottom: hp(2),
    alignItems: 'center',
  },
  welcomeText: {
    fontSize: hp(4),
    fontWeight: theme.fonts.bold,
    color: '#FFFFFF',
    textAlign: 'center',
  },
  form: {
    marginTop: hp(3),
    gap: 25,
  },
  forgotPassword: {
    textAlign: 'right',
    fontWeight: theme.fonts.semibold,
    color: '#FFFFFF',
  },
  footer: {
    marginTop: hp(5),
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    gap: 5,
  },
  footerText: {
    textAlign: 'center',
    color: '#FFFFFF',
    fontSize: hp(1.8),
  },
  backButtonContainer: {
    position: 'absolute',
    top: hp(6), 
    left: wp(5), 
    zIndex: 1, 
  },
  
  
});
